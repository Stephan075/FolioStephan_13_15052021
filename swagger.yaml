swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User Transactions API
      description: API to distribute the list of transactions for the current month
      parameters:
        - type: string
          in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: The list of all transactions, successfully recovered
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /user/profile/transaction/{transactionsId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: Search for a transaction using the id
      description: search for a transaction using the id
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionsId
          description: ID of transaction to fetch
          required: true
          type: string
        - in: body
          name: body
          description: Create a detail transaction
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      produces:
        - application/json
      responses:
        "201":
          description: The Search Transaction, successfully recovered
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Request id does not exist
        "500":
          description: Internal Server Error
  /user/profile/transaction/{transactionsId}/category:
    post:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User add category detail Transaction API
      description: API adds the detail on a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionsId
          description: ID of transaction to fetch
          required: true
          type: string
        - in: body
          name: body
          description: Create a detail transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionsAddCategory"
      produces:
        - application/json
      responses:
        "201":
          description: User transaction category created successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile/transaction/{transactionsId}/notes:
    post:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User add notes details Transaction API
      description: API adds the detail on a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionsId
          description: ID of transaction to fetch
          required: true
          type: string
        - in: body
          name: body
          description: Create a note transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionsAddNotes"
      produces:
        - application/json
      responses:
        "201":
          description: User transaction category created successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile/transaction/{transactionsId}/updateCategory:
    put:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User update category detail Transaction API
      description: API update the detail on a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionsId
          description: ID of transaction to fetch
          required: true
          type: string
        - in: body
          name: body
          description: Create a detail transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionsUpdateCategory"
      produces:
        - application/json
      responses:
        "201":
          description: User transaction category created successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile/transaction/{transactionsId}/updateNotes:
    put:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User update notes detail Transaction API
      description: API update the detail on a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionsId
          description: ID of transaction to fetch
          required: true
          type: string
        - in: body
          name: body
          description: Create a detail transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionsUpdateNotes"
      produces:
        - application/json
      responses:
        "201":
          description: User transaction category created successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile/transaction/{transactionsId}/deleteCategory:
    delete:
      security:
        - Bearer: []
      tags:
        - User Transactions
      summary: User delete notes detail Transaction API
      description: API delete the detail on a transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: transactionsId
          description: ID of transaction to fetch
          required: true
          type: string
        - in: body
          name: body
          description: Create a detail transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionsDeleteCategory"
      produces:
        - application/json
      responses:
        "201":
          description: User transaction category delete successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
        "404":
          description: Category not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: transaction ID
        example: 62815a98bab4c20e2c6f54ab
      date:
        type: string
        description: transaction date
        example: "2020-06-20"
      description:
        type: string
        description: transaction description
        example: "Golden Sun Bakery"
      amount:
        type: integer
        description: transaction amount
        example: 5
      balance:
        type: integer
        description: account balance after transaction
        example: 2082.79
      TransactionDetails:
        type: object
        properties:
          transaction type:
            type: string
            description: transaction type
            example: Electronic
          category:
            type: string
            description: transaction category
            example: Food
          notes:
            type: string
            description: transaction notes
            example: Macdo
  TransactionsAddCategory:
    type: object
    properties:
      category:
        type: string
  TransactionsAddNotes:
    type: object
    properties:
      notes:
        type: string
  TransactionsUpdateCategory:
    type: object
    properties:
      category:
        type: string
  TransactionsUpdateNotes:
    type: object
    properties:
      notes:
        type: string
  TransactionsDeleteCategory:
    type: object
    properties:
      notes:
        type: string
